{
  "type": "root",
  "children": [
    {
      "type": "text",
      "value": "\n"
    },
    {
      "type": "section",
      "children": [
        {
          "type": "text",
          "value": "\n  "
        },
        {
          "type": "text",
          "value": "\n  "
        },
        {
          "type": "heading",
          "id": "content",
          "children": [
            {
              "type": "text",
              "value": "computed"
            }
          ]
        },
        {
          "type": "directive",
          "name": "contents",
          "children": [],
          "argument": [
            {
              "type": "text",
              "value": "On this Page"
            }
          ],
          "options": {
            "local": true,
            "backlinks": "none",
            "depth": 2,
            "class": "singlecol"
          }
        },
        {
          "type": "text",
          "value": "\n    "
        },
        {
          "type": "text",
          "value": "\n  "
        },
        {
          "type": "text",
          "value": "\n  "
        },
        {
          "type": "section",
          "children": [
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "literal",
                  "children": [
                    {
                      "type": "text",
                      "value": "infix "
                    },
                    {
                      "type": "text",
                      "value": "fun "
                    },
                    {
                      "type": "text",
                      "value": "<"
                    },
                    {
                      "type": "reference",
                      "children": [
                        {
                          "type": "text",
                          "value": "T"
                        }
                      ],
                      "refuri": "api/kotlin-extensions/mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/computed"
                    },
                    {
                      "type": "text",
                      "value": "> "
                    },
                    {
                      "type": "reference",
                      "children": [
                        {
                          "type": "text",
                          "value": "KProperty"
                        }
                      ],
                      "refuri": "https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.reflect/-k-property/index.html"
                    },
                    {
                      "type": "text",
                      "value": "<"
                    },
                    {
                      "type": "reference",
                      "children": [
                        {
                          "type": "text",
                          "value": "T"
                        }
                      ],
                      "refuri": "api/kotlin-extensions/mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/computed"
                    },
                    {
                      "type": "text",
                      "value": ">"
                    },
                    {
                      "type": "text",
                      "value": "."
                    },
                    {
                      "type": "reference",
                      "children": [
                        {
                          "type": "text",
                          "value": "computed"
                        }
                      ],
                      "refuri": "api/kotlin-extensions/mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/computed"
                    },
                    {
                      "type": "text",
                      "value": "("
                    },
                    {
                      "type": "text",
                      "value": "expression"
                    },
                    {
                      "type": "text",
                      "value": ": "
                    },
                    {
                      "type": "reference",
                      "children": [
                        {
                          "type": "text",
                          "value": "Any"
                        }
                      ],
                      "refuri": "https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html"
                    },
                    {
                      "type": "text",
                      "value": ")"
                    },
                    {
                      "type": "text",
                      "value": ": "
                    },
                    {
                      "type": "text",
                      "value": "Bson"
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Creates a projection of a property whose value is computed from the given expression. Projection with an expression can be used in the following contexts:"
                }
              ]
            },
            {
              "type": "list",
              "enumtype": "unordered",
              "children": [
                {
                  "type": "text",
                  "value": "\n"
                },
                {
                  "type": "listItem",
                  "children": [
                    {
                      "type": "text",
                      "value": "$project aggregation pipeline stage."
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": "\n"
                },
                {
                  "type": "listItem",
                  "children": [
                    {
                      "type": "text",
                      "value": "Starting from MongoDB 4.4, it's also accepted in various find-related methods within the {@code\nMongoCollection}-based API where projection is supported, for example: "
                    },
                    {
                      "type": "list",
                      "enumtype": "unordered",
                      "children": [
                        {
                          "type": "text",
                          "value": "\n"
                        },
                        {
                          "type": "listItem",
                          "children": [
                            {
                              "type": "text",
                              "value": "{@code find()}"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": "\n"
                        },
                        {
                          "type": "listItem",
                          "children": [
                            {
                              "type": "text",
                              "value": "{@code findOneAndReplace()}"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": "\n"
                        },
                        {
                          "type": "listItem",
                          "children": [
                            {
                              "type": "text",
                              "value": "{@code findOneAndUpdate()}"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": "\n"
                        },
                        {
                          "type": "listItem",
                          "children": [
                            {
                              "type": "text",
                              "value": "{@code findOneAndDelete()}"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": "\n"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": " "
                }
              ]
            },
            {
              "type": "section",
              "children": [
                {
                  "type": "heading",
                  "id": "return",
                  "children": [
                    {
                      "type": "text",
                      "value": "Return"
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the projection"
                }
              ]
            },
            {
              "type": "section",
              "children": [
                {
                  "type": "heading",
                  "id": "parameters",
                  "children": [
                    {
                      "type": "text",
                      "value": "Parameters"
                    }
                  ]
                }
              ]
            },
            {
              "type": "directive",
              "name": "list-table",
              "argument": [],
              "children": [
                {
                  "type": "list",
                  "enumtype": "unordered",
                  "children": [
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "list",
                          "enumtype": "unordered",
                          "children": [
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "text",
                                  "value": "expression"
                                }
                              ]
                            },
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "paragraph",
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "the expression"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "list",
                          "enumtype": "unordered",
                          "children": [
                            {
                              "type": "listItem",
                              "children": []
                            },
                            {
                              "type": "listItem",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "options": {
                "header-rows": "0"
              }
            },
            {
              "type": "section",
              "children": [
                {
                  "type": "heading",
                  "id": "see-also",
                  "children": [
                    {
                      "type": "text",
                      "value": "See also"
                    }
                  ]
                }
              ]
            },
            {
              "type": "directive",
              "name": "list-table",
              "argument": [],
              "children": [
                {
                  "type": "list",
                  "enumtype": "unordered",
                  "children": [
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "list",
                          "enumtype": "unordered",
                          "children": [
                            {
                              "type": "listItem",
                              "children": []
                            },
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "paragraph",
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "#computedSearchMeta(String)"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "list",
                          "enumtype": "unordered",
                          "children": [
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Aggregates"
                                }
                              ]
                            },
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "paragraph",
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "#project(Bson)"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "options": {
                "header-rows": "0"
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "literal",
                  "children": [
                    {
                      "type": "text",
                      "value": "fun "
                    },
                    {
                      "type": "text",
                      "value": "<"
                    },
                    {
                      "type": "reference",
                      "children": [
                        {
                          "type": "text",
                          "value": "T"
                        }
                      ],
                      "refuri": "api/kotlin-extensions/mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/computed"
                    },
                    {
                      "type": "text",
                      "value": "> "
                    },
                    {
                      "type": "reference",
                      "children": [
                        {
                          "type": "text",
                          "value": "computed"
                        }
                      ],
                      "refuri": "api/kotlin-extensions/mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/computed"
                    },
                    {
                      "type": "text",
                      "value": "("
                    },
                    {
                      "type": "text",
                      "value": "property"
                    },
                    {
                      "type": "text",
                      "value": ": "
                    },
                    {
                      "type": "reference",
                      "children": [
                        {
                          "type": "text",
                          "value": "KProperty"
                        }
                      ],
                      "refuri": "https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.reflect/-k-property/index.html"
                    },
                    {
                      "type": "text",
                      "value": "<"
                    },
                    {
                      "type": "reference",
                      "children": [
                        {
                          "type": "text",
                          "value": "T"
                        }
                      ],
                      "refuri": "api/kotlin-extensions/mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/computed"
                    },
                    {
                      "type": "text",
                      "value": ">"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "text",
                      "value": "expression"
                    },
                    {
                      "type": "text",
                      "value": ": "
                    },
                    {
                      "type": "reference",
                      "children": [
                        {
                          "type": "text",
                          "value": "Any"
                        }
                      ],
                      "refuri": "https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html"
                    },
                    {
                      "type": "text",
                      "value": ")"
                    },
                    {
                      "type": "text",
                      "value": ": "
                    },
                    {
                      "type": "text",
                      "value": "Bson"
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Creates a projection of a property whose value is computed from the given expression. Projection with an expression can be used in the following contexts:"
                }
              ]
            },
            {
              "type": "list",
              "enumtype": "unordered",
              "children": [
                {
                  "type": "text",
                  "value": "\n"
                },
                {
                  "type": "listItem",
                  "children": [
                    {
                      "type": "text",
                      "value": "$project aggregation pipeline stage."
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": "\n"
                },
                {
                  "type": "listItem",
                  "children": [
                    {
                      "type": "text",
                      "value": "Starting from MongoDB 4.4, it's also accepted in various find-related methods within the {@code\nMongoCollection}-based API where projection is supported, for example: "
                    },
                    {
                      "type": "list",
                      "enumtype": "unordered",
                      "children": [
                        {
                          "type": "text",
                          "value": "\n"
                        },
                        {
                          "type": "listItem",
                          "children": [
                            {
                              "type": "text",
                              "value": "{@code find()}"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": "\n"
                        },
                        {
                          "type": "listItem",
                          "children": [
                            {
                              "type": "text",
                              "value": "{@code findOneAndReplace()}"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": "\n"
                        },
                        {
                          "type": "listItem",
                          "children": [
                            {
                              "type": "text",
                              "value": "{@code findOneAndUpdate()}"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": "\n"
                        },
                        {
                          "type": "listItem",
                          "children": [
                            {
                              "type": "text",
                              "value": "{@code findOneAndDelete()}"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": "\n"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": " "
                }
              ]
            },
            {
              "type": "section",
              "children": [
                {
                  "type": "heading",
                  "id": "return",
                  "children": [
                    {
                      "type": "text",
                      "value": "Return"
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the projection"
                }
              ]
            },
            {
              "type": "section",
              "children": [
                {
                  "type": "heading",
                  "id": "parameters",
                  "children": [
                    {
                      "type": "text",
                      "value": "Parameters"
                    }
                  ]
                }
              ]
            },
            {
              "type": "directive",
              "name": "list-table",
              "argument": [],
              "children": [
                {
                  "type": "list",
                  "enumtype": "unordered",
                  "children": [
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "list",
                          "enumtype": "unordered",
                          "children": [
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "text",
                                  "value": "property"
                                }
                              ]
                            },
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "paragraph",
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "the data class property"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "list",
                          "enumtype": "unordered",
                          "children": [
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "text",
                                  "value": "expression"
                                }
                              ]
                            },
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "paragraph",
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "the expression"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "list",
                          "enumtype": "unordered",
                          "children": [
                            {
                              "type": "listItem",
                              "children": []
                            },
                            {
                              "type": "listItem",
                              "children": []
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "options": {
                "header-rows": "0"
              }
            },
            {
              "type": "section",
              "children": [
                {
                  "type": "heading",
                  "id": "see-also",
                  "children": [
                    {
                      "type": "text",
                      "value": "See also"
                    }
                  ]
                }
              ]
            },
            {
              "type": "directive",
              "name": "list-table",
              "argument": [],
              "children": [
                {
                  "type": "list",
                  "enumtype": "unordered",
                  "children": [
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "list",
                          "enumtype": "unordered",
                          "children": [
                            {
                              "type": "listItem",
                              "children": []
                            },
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "paragraph",
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "#computedSearchMeta(String)"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "list",
                          "enumtype": "unordered",
                          "children": [
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Aggregates"
                                }
                              ]
                            },
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "paragraph",
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "#project(Bson)"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "options": {
                "header-rows": "0"
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "literal",
                  "children": [
                    {
                      "type": "text",
                      "value": "infix "
                    },
                    {
                      "type": "text",
                      "value": "fun "
                    },
                    {
                      "type": "reference",
                      "children": [
                        {
                          "type": "text",
                          "value": "String"
                        }
                      ],
                      "refuri": "https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html"
                    },
                    {
                      "type": "text",
                      "value": "."
                    },
                    {
                      "type": "reference",
                      "children": [
                        {
                          "type": "text",
                          "value": "computed"
                        }
                      ],
                      "refuri": "api/kotlin-extensions/mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/computed"
                    },
                    {
                      "type": "text",
                      "value": "("
                    },
                    {
                      "type": "text",
                      "value": "expression"
                    },
                    {
                      "type": "text",
                      "value": ": "
                    },
                    {
                      "type": "reference",
                      "children": [
                        {
                          "type": "text",
                          "value": "Any"
                        }
                      ],
                      "refuri": "https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html"
                    },
                    {
                      "type": "text",
                      "value": ")"
                    },
                    {
                      "type": "text",
                      "value": ": "
                    },
                    {
                      "type": "text",
                      "value": "Bson"
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Creates a projection of a String whose value is computed from the given expression. Projection with an expression can be used in the following contexts:"
                }
              ]
            },
            {
              "type": "list",
              "enumtype": "unordered",
              "children": [
                {
                  "type": "text",
                  "value": "\n"
                },
                {
                  "type": "listItem",
                  "children": [
                    {
                      "type": "text",
                      "value": "$project aggregation pipeline stage."
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": "\n"
                },
                {
                  "type": "listItem",
                  "children": [
                    {
                      "type": "text",
                      "value": "Starting from MongoDB 4.4, it's also accepted in various find-related methods within the {@code\nMongoCollection}-based API where projection is supported, for example: "
                    },
                    {
                      "type": "list",
                      "enumtype": "unordered",
                      "children": [
                        {
                          "type": "text",
                          "value": "\n"
                        },
                        {
                          "type": "listItem",
                          "children": [
                            {
                              "type": "text",
                              "value": "{@code find()}"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": "\n"
                        },
                        {
                          "type": "listItem",
                          "children": [
                            {
                              "type": "text",
                              "value": "{@code findOneAndReplace()}"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": "\n"
                        },
                        {
                          "type": "listItem",
                          "children": [
                            {
                              "type": "text",
                              "value": "{@code findOneAndUpdate()}"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": "\n"
                        },
                        {
                          "type": "listItem",
                          "children": [
                            {
                              "type": "text",
                              "value": "{@code findOneAndDelete()}"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": "\n"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": " "
                }
              ]
            },
            {
              "type": "section",
              "children": [
                {
                  "type": "heading",
                  "id": "return",
                  "children": [
                    {
                      "type": "text",
                      "value": "Return"
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the projection"
                }
              ]
            },
            {
              "type": "section",
              "children": [
                {
                  "type": "heading",
                  "id": "parameters",
                  "children": [
                    {
                      "type": "text",
                      "value": "Parameters"
                    }
                  ]
                }
              ]
            },
            {
              "type": "directive",
              "name": "list-table",
              "argument": [],
              "children": [
                {
                  "type": "list",
                  "enumtype": "unordered",
                  "children": [
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "list",
                          "enumtype": "unordered",
                          "children": [
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "text",
                                  "value": "expression"
                                }
                              ]
                            },
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "paragraph",
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "the expression"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "options": {
                "header-rows": "0"
              }
            },
            {
              "type": "section",
              "children": [
                {
                  "type": "heading",
                  "id": "see-also",
                  "children": [
                    {
                      "type": "text",
                      "value": "See also"
                    }
                  ]
                }
              ]
            },
            {
              "type": "directive",
              "name": "list-table",
              "argument": [],
              "children": [
                {
                  "type": "list",
                  "enumtype": "unordered",
                  "children": [
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "list",
                          "enumtype": "unordered",
                          "children": [
                            {
                              "type": "listItem",
                              "children": []
                            },
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "paragraph",
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "#computedSearchMeta(String)"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "list",
                          "enumtype": "unordered",
                          "children": [
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Aggregates"
                                }
                              ]
                            },
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "paragraph",
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "#project(Bson)"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "options": {
                "header-rows": "0"
              }
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "literal",
                  "children": [
                    {
                      "type": "text",
                      "value": "fun "
                    },
                    {
                      "type": "reference",
                      "children": [
                        {
                          "type": "text",
                          "value": "computed"
                        }
                      ],
                      "refuri": "api/kotlin-extensions/mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/computed"
                    },
                    {
                      "type": "text",
                      "value": "("
                    },
                    {
                      "type": "text",
                      "value": "property"
                    },
                    {
                      "type": "text",
                      "value": ": "
                    },
                    {
                      "type": "reference",
                      "children": [
                        {
                          "type": "text",
                          "value": "String"
                        }
                      ],
                      "refuri": "https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-string/index.html"
                    },
                    {
                      "type": "text",
                      "value": ", "
                    },
                    {
                      "type": "text",
                      "value": "expression"
                    },
                    {
                      "type": "text",
                      "value": ": "
                    },
                    {
                      "type": "reference",
                      "children": [
                        {
                          "type": "text",
                          "value": "Any"
                        }
                      ],
                      "refuri": "https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-any/index.html"
                    },
                    {
                      "type": "text",
                      "value": ")"
                    },
                    {
                      "type": "text",
                      "value": ": "
                    },
                    {
                      "type": "text",
                      "value": "Bson"
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "Creates a projection of a String whose value is computed from the given expression. Projection with an expression can be used in the following contexts:"
                }
              ]
            },
            {
              "type": "list",
              "enumtype": "unordered",
              "children": [
                {
                  "type": "text",
                  "value": "\n"
                },
                {
                  "type": "listItem",
                  "children": [
                    {
                      "type": "text",
                      "value": "$project aggregation pipeline stage."
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": "\n"
                },
                {
                  "type": "listItem",
                  "children": [
                    {
                      "type": "text",
                      "value": "Starting from MongoDB 4.4, it's also accepted in various find-related methods within the {@code\nMongoCollection}-based API where projection is supported, for example: "
                    },
                    {
                      "type": "list",
                      "enumtype": "unordered",
                      "children": [
                        {
                          "type": "text",
                          "value": "\n"
                        },
                        {
                          "type": "listItem",
                          "children": [
                            {
                              "type": "text",
                              "value": "{@code find()}"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": "\n"
                        },
                        {
                          "type": "listItem",
                          "children": [
                            {
                              "type": "text",
                              "value": "{@code findOneAndReplace()}"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": "\n"
                        },
                        {
                          "type": "listItem",
                          "children": [
                            {
                              "type": "text",
                              "value": "{@code findOneAndUpdate()}"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": "\n"
                        },
                        {
                          "type": "listItem",
                          "children": [
                            {
                              "type": "text",
                              "value": "{@code findOneAndDelete()}"
                            }
                          ]
                        },
                        {
                          "type": "text",
                          "value": "\n"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "text",
                  "value": " "
                }
              ]
            },
            {
              "type": "section",
              "children": [
                {
                  "type": "heading",
                  "id": "return",
                  "children": [
                    {
                      "type": "text",
                      "value": "Return"
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "children": [
                {
                  "type": "text",
                  "value": "the projection"
                }
              ]
            },
            {
              "type": "section",
              "children": [
                {
                  "type": "heading",
                  "id": "parameters",
                  "children": [
                    {
                      "type": "text",
                      "value": "Parameters"
                    }
                  ]
                }
              ]
            },
            {
              "type": "directive",
              "name": "list-table",
              "argument": [],
              "children": [
                {
                  "type": "list",
                  "enumtype": "unordered",
                  "children": [
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "list",
                          "enumtype": "unordered",
                          "children": [
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "text",
                                  "value": "property"
                                }
                              ]
                            },
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "paragraph",
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "the data class property"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "list",
                          "enumtype": "unordered",
                          "children": [
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "text",
                                  "value": "expression"
                                }
                              ]
                            },
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "paragraph",
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "the expression"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "options": {
                "header-rows": "0"
              }
            },
            {
              "type": "section",
              "children": [
                {
                  "type": "heading",
                  "id": "see-also",
                  "children": [
                    {
                      "type": "text",
                      "value": "See also"
                    }
                  ]
                }
              ]
            },
            {
              "type": "directive",
              "name": "list-table",
              "argument": [],
              "children": [
                {
                  "type": "list",
                  "enumtype": "unordered",
                  "children": [
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "list",
                          "enumtype": "unordered",
                          "children": [
                            {
                              "type": "listItem",
                              "children": []
                            },
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "paragraph",
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "#computedSearchMeta(String)"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "list",
                          "enumtype": "unordered",
                          "children": [
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "text",
                                  "value": "Aggregates"
                                }
                              ]
                            },
                            {
                              "type": "listItem",
                              "children": [
                                {
                                  "type": "paragraph",
                                  "children": [
                                    {
                                      "type": "text",
                                      "value": "#project(Bson)"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              "options": {
                "header-rows": "0"
              }
            }
          ]
        },
        {
          "type": "text",
          "value": "\n"
        }
      ]
    },
    {
      "type": "text",
      "value": "\n      "
    },
    {
      "type": "text",
      "value": "\n    "
    },
    {
      "type": "directive",
      "name": "facet",
      "children": [],
      "argument": [],
      "options": {
        "name": "genre",
        "values": "reference"
      }
    }
  ],
  "options": {},
  "fileid": "api/kotlin-extensions/mongodb-driver-kotlin-extensions/com.mongodb.kotlin.client.model/-projections/computed.ast"
}