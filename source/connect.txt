.. _kotlin-sync-connect:

==================
Connect to MongoDB
==================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: reference
 
.. meta::
   :description: Learn how to use the Kotlin Sync driver to connect to MongoDB.
   :keywords: client, ssl, tls, localhost

.. .. toctree::
..    :titlesonly:
..    :maxdepth: 1
.. 
..    /connect/mongoclient
..    /connect/connection-targets
..    /connect/connection-options
..    /connect/tls
..    /connect/network-compression
..    /connect/server-selection
..    /connect/stable-api
..    /connect/csot

Overview
--------

This page contains code examples that show how to use the
{+driver-short+} to connect your application to MongoDB by specifying
various settings. 

.. .. tip::
.. 
..   To learn more about the connection options on this page, see the link
..   provided in each section.

To use a connection example from this page, copy the code example into the
:ref:`sample application <kotlin-sync-connect-sample>` or your own application.
Be sure to replace all placeholders in the code examples, such as
``<hostname>``, with the relevant values for your MongoDB deployment.

.. _kotlin-sync-connect-sample:

.. include:: /includes/usage-examples/sample-app-intro.rst

.. literalinclude:: /includes/usage-examples/connect-sample-app.kt
   :language: python
   :copyable: true
   :linenos:
   :emphasize-lines: 6-8

Connection
----------

The following sections describe how to connect to different targets,
such as a local instance of MongoDB or a cloud-hosted instance on Atlas.

Local Deployment
~~~~~~~~~~~~~~~~

The following code shows the connection string to connect to a local
instance of MongoDB:

.. code-block:: kotlin

   val uri = "mongodb://localhost:27017/"
   val mongoClient = MongoClient.create(uri)

Atlas
~~~~~

.. code-block:: kotlin

   val uri = "<Atlas connection string>"
   
   val serverApi = ServerApi.builder()
       .version(ServerApiVersion.V1)
       .build()

   val settings = MongoClientSettings.builder()
       .applyConnectionString(ConnectionString(uri))
       .serverApi(serverApi)
       .build()

   val mongoClient = MongoClient.create(settings)

Replica Set
~~~~~~~~~~~

.. code-block:: kotlin
   
   val uri = "mongodb://<replica set member>:<port>/?replicaSet=<replica set name>"
   val mongoClient = MongoClient.create(uri)

Transport Layer Security (TLS)
------------------------------

The following sections describe how to connect to MongoDB
while enabling the TLS protocol.

Enable TLS
~~~~~~~~~~

.. include:: /includes/connect/tls-tabs.rst

.. To learn more about enabling TLS, see :ref:`kotlin-sync-enable-tls` in
.. the TLS configuration guide.

Disable Hostname Verification
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/connect/disable-host-verification-tabs.rst

.. To learn more about disabling hostname verification, see :ref:`kotlin-sync-insecure-tls` in
.. the TLS configuration guide.

Network Compression
-------------------

Compression Algorithms
~~~~~~~~~~~~~~~~~~~~~~

.. include:: /includes/connect/compression-tabs.rst

.. To learn more about specifying compression algorithms, see
.. :ref:`kotlin-sync-enable-compression` in the Network Compression guide.

zlib Compression Level
~~~~~~~~~~~~~~~~~~~~~~

.. tabs::

   .. tab:: MongoClient
      :tabid: mongoclient

      .. code-block:: kotlin

         val zlib = MongoCompressor.createZlibCompressor()

         val settings = MongoClientSettings.builder()
             .applyConnectionString(ConnectionString(uri))
             .compressorList(listOf(zlib.withProperty(MongoCompressor.LEVEL, <level>)))
             .build()

         val mongoClient = MongoClient.create(settings)

   .. tab:: Connection String
      :tabid: connectionstring

      .. code-block:: kotlin

         val uri = "mongodb://<username>:<password>@<hostname>:<port>/?" +
                   "compressors=zlib" +
                   "zlibCompressionLevel=<zlib compression level>"
         
         val mongoClient = MongoClient.create(uri)

.. To learn more about setting the zlib compression level, see
.. :ref:`kotlin-sync-enable-compression` in the Network Compression guide.

Server Selection
----------------

.. code-block:: kotlin

   val client = MongoClient.create("mongodb://<username>:<password>@<hostname>:<port>",
                                server_selector=<selector function>)

.. To learn more about customizing server selection, see
.. :ref:`kotlin-sync-server-selection`.

{+stable-api+}
--------------

.. code-block:: kotlin

   val serverApi = ServerApi.builder()
       .version(ServerApiVersion.V1)
       .build()
   
   val uri = "<connection string>"
   
   val settings = MongoClientSettings.builder()
       .applyConnectionString(ConnectionString(uri))
       .serverApi(serverApi)
       .build()
   
   val client = MongoClient.create(settings)


.. To learn more about the {+stable-api+}, see :ref:`kotlin-sync-stable-api`.
